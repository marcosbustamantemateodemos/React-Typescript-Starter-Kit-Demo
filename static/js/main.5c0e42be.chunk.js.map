{"version":3,"sources":["constants/MenuItems.ts","screens/Home.tsx","screens/Page.tsx","screens/Page2.tsx","utils/StringsUtils.ts","components/Menu.tsx","components/SearchModal.tsx","components/Header.tsx","utils/Message.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["items","name","path","component","props","checkFixedHeader","newArray","index","push","setState","elements","state","concat","componentDidMount","className","this","map","element","key","Component","StringsUtils","firstLetterUpperCase","word","toUpperCase","slice","menuStyle","width","Menu","show","place","handle","Drawer","style","placement","onHide","Header","Title","Body","to","onClick","Footer","modalStyle","textAlign","SearchModal","Modal","InputGroup","inside","Input","Button","Icon","icon","handleModal","open","handleMenu","appearance","Message","funcName","title","description","duration","onClose","Notification","App","notificationInfo","href","undefined","notificationCongratulations","count","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c0e42be.chunk.js","sourcesContent":["import Home from './../screens/Home';\r\nimport Page from './../screens/Page';\r\nimport Page2 from './../screens/Page2';\r\n\r\nexport const items = [\r\n    {\r\n        name: 'home',\r\n        path: '/home',\r\n        component: Home\r\n    },\r\n    {\r\n        name: 'page1',\r\n        path: '/page',\r\n        component: Page\r\n    },\r\n    {\r\n        name: 'page2',\r\n        path: '/page2',\r\n        component: Page2\r\n    }\r\n];","import React, { Component } from \"react\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {\r\n  elements: Array<number>;\r\n}\r\n\r\nexport default class Home extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      elements: []\r\n    };\r\n  }\r\n\r\n  checkFixedHeader = () => {\r\n    let newArray: Array<number> = [];\r\n    for (let index = 0; index < 100; index++) {\r\n      newArray.push(index);\r\n    }\r\n    this.setState({ elements: this.state.elements.concat(newArray) });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // Use this for check header fixed\r\n    // this.checkFixedHeader();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Home</h1>\r\n        {this.state.elements.map(element => (\r\n          <p key={element}>{element}</p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nexport default class Page extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"container\">\r\n          <h1>Page 1</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nexport default class Page2 extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"container\">\r\n          <h1>Page 2</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export class StringsUtils {\r\n  public static firstLetterUpperCase = (word: string) => {\r\n    return word[0].toUpperCase() + word.slice(1);\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Drawer } from \"rsuite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { items } from \"../constants/MenuItems\";\r\nimport { StringsUtils } from \"../utils/StringsUtils\";\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  place: Places;\r\n  handle: any;\r\n}\r\n\r\ninterface IState {}\r\n\r\nconst menuStyle = {\r\n  width: \"250px\"\r\n};\r\n\r\nexport default class Menu extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { show, place, handle } = this.props;\r\n\r\n    return (\r\n      <Drawer style={menuStyle} show={show} placement={place} onHide={handle}>\r\n        <Drawer.Header>\r\n          <Drawer.Title>Menu</Drawer.Title>\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          {items.map(element => (\r\n            <Link\r\n              key={element.name}\r\n              className=\"menuItems\"\r\n              to={element.path}\r\n              onClick={handle}\r\n            >\r\n              {StringsUtils.firstLetterUpperCase(element.name)}\r\n            </Link>\r\n          ))}\r\n        </Drawer.Body>\r\n        <Drawer.Footer></Drawer.Footer>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\ntype Places = \"left\" | \"right\" | \"top\" | \"bottom\";\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Icon, InputGroup, Input } from \"rsuite\";\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  handle: any;\r\n}\r\n\r\ninterface IState {}\r\n\r\nconst modalStyle = {\r\n  textAlign: \"center\" as const,\r\n  width: \"250px\"\r\n};\r\n\r\nexport default class SearchModal extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { show, handle } = this.props;\r\n\r\n    return (\r\n      <Modal show={show} onHide={handle} style={modalStyle}>\r\n        <Modal.Header>\r\n          <h4>What are you looking for?</h4>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <InputGroup inside>\r\n            <Input />\r\n            <InputGroup.Button>\r\n              <Icon icon=\"search\" onClick={handle} />\r\n            </InputGroup.Button>\r\n          </InputGroup>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"rsuite\";\r\nimport { Icon } from \"rsuite\";\r\nimport SearchModal from \"./SearchModal\";\r\n\r\ninterface IProps {\r\n  handleMenu: any;\r\n}\r\n\r\ninterface IState {\r\n  open: boolean;\r\n}\r\n\r\nexport default class Header extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  handleModal = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  render() {\r\n    const { handleMenu } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <Button className=\"buttonMenu\" appearance=\"ghost\" onClick={handleMenu}>\r\n          <Icon icon=\"bars\" />\r\n        </Button>\r\n\r\n        <h1>Title</h1>\r\n\r\n        <Button\r\n          className=\"buttonSearch\"\r\n          appearance=\"ghost\"\r\n          onClick={this.handleModal}\r\n        >\r\n          <Icon icon=\"search\" />\r\n        </Button>\r\n\r\n        <SearchModal show={open} handle={this.handleModal} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Notification } from \"rsuite\";\r\n\r\nexport default class Message {\r\n  public static open = (\r\n    funcName: NotificationTypes,\r\n    title: string,\r\n    placement: NotificationPlacement,\r\n    description: JSX.Element,\r\n    duration: number,\r\n    onClose: (() => void) | undefined\r\n  ) => {\r\n    Notification[funcName]({\r\n      title,\r\n      placement,\r\n      description,\r\n      duration,\r\n      onClose\r\n    });\r\n  };\r\n}\r\n\r\ntype NotificationTypes = \"error\" | \"success\" | \"info\" | \"warning\";\r\ntype NotificationPlacement =\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\";\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"rsuite/dist/styles/rsuite-default.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Menu from \"./components/Menu\";\nimport { items } from \"./constants/MenuItems\";\nimport Header from \"./components/Header\";\nimport Message from \"./utils/Message\";\n\ninterface IProps {}\n\ninterface IState {\n  open: boolean;\n}\n\nclass App extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n  }\n\n  handleMenu = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  notificationInfo = () => {\n    Message.open(\n      \"info\",\n      \"Check my website\",\n      \"bottomRight\",\n      <a href=\"https://www.marcosbustamantemateo.com\">\n        www.marcosbustamantemateo.com\n      </a>,\n      0,\n      undefined\n    );\n  };\n\n  notificationCongratulations = () => {\n    Message.open(\n      \"success\",\n      \"Congratulations\",\n      \"bottomRight\",\n      <p>You are using React Typescript Starter Kit</p>,\n      0,\n      () => this.notificationInfo()\n    );\n  };\n\n  componentDidMount() {\n    this.notificationCongratulations();\n  }\n\n  render() {\n    const { open } = this.state;\n\n    return (\n      <div className=\"center\">\n        <Router>\n          <Menu show={open} place={\"left\"} handle={this.handleMenu} />\n          <Header handleMenu={this.handleMenu} />\n          {items.map((element, count) => (\n            <Route\n              key={count}\n              path={element.path}\n              component={element.component}\n            />\n          ))}\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}